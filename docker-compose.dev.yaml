# Project: Junqo
# Description: This file is the development docker-compose file for the Junqo project.
#              It deploy everything needed to run the project in development mode.

services:
  front:
    container_name: junqo_front_dev
    build:
      context: ./
      dockerfile: ./junqo_front/dockerfile.dev
      args:
        - FLUTTER_VERSION=${FLUTTER_VERSION:-3.22.2}
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      back:
        condition: service_healthy
    develop:
      watch:
        # Sync and restart when nginx.conf changes
        - action: sync+restart
          path: ./junqo_front/nginx.conf
          target: /etc/nginx/nginx.conf
        # Rebuild the container when any other files in junqo_front change
        - action: rebuild
          path: ./junqo_front
          ignore:
            - ./nginx.conf

  back:
    container_name: junqo_back_dev
    build:
      context: ./
      dockerfile: ./junqo_back/dockerfile.dev
      args:
        - DATABASE_NAME=${DATABASE_NAME:-junqo}
        - DATABASE_USER=${DATABASE_USER:-junqo}
        - DATABASE_HOST=db
        - DATABASE_PORT=${DATABASE_PORT:-5432}
    env_file:
      - ${BACK_ENV_FILE:-./junqo_back/.env}
    restart: unless-stopped
    networks:
      - back-net
    ports:
      - "${BACK_PORT:-4200}:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    develop:
      watch:
        # Sync all files except node_modules for live reloading
        - action: sync
          path: ./junqo_back
          target: /home/app/junqo_back/
          ignore:
            - ./node_modules/
        # Sync and restart when schema files change
        - action: sync+restart
          path: ./schemas
          target: /home/app/schemas/
          ignore:
            - ./*.md
            - ./*.planned

  db:
    container_name: junqo_db_dev
    image: postgres:alpine
    restart: unless-stopped
    shm_size: ${DATABASE_SHM_SIZE:-128mb}
    networks:
      - back-net
    volumes:
      - db_data_dev:/var/lib/postgresql/data
      - ${TEST_DATA_FOLDER:-./db}:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-junqo}
      POSTGRES_USER: ${DATABASE_USER:-junqo}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-junqo}"]
      interval: 5s
      timeout: 5s
      retries: 5


  adminer:
    container_name: junqo_adminer_dev
    image: adminer
    restart: unless-stopped
    environment:
      ADMINER_DESIGN: ${ADMINER_DESIGN:-pepa-linha-dark}
      ADMINER_DEFAULT_SERVER: db
    networks:
      - back-net
    ports:
      - ${ADMINER_PORT:-3000}:8080
    depends_on:
      - db

networks:
  back-net:
    driver: bridge

volumes:
  db_data_dev:

secrets:
  db_password:
    file: ${DATABASE_PASSWORD_FILE:-./db_password.conf}
