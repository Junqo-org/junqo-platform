# Launch tests for the frontend
name: Frontend Tests

on:
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  changes-check:
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.filter.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            any_changed:
              - 'junqo_front/**'
              - '.github/workflows/front-tests.yml'

  front-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version-file: junqo_front/pubspec.yaml

    - run: flutter --version

    - name: Restore pub cache
      uses: actions/cache@v4
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-cache-${{ hashFiles('junqo_front/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pub-cache-${{ hashFiles('junqo_front/pubspec.yaml') }}
          ${{ runner.os }}-pub-cache

    - name: Install dependencies
      run: flutter pub get
      working-directory: junqo_front

    - name: Generate graphql types
      run: |
        mkdir -p ./lib/schemas
        if [ ! -d "../schemas" ] || [ -z "$(ls -A ../schemas/*.graphql 2>/dev/null)" ]; then
          echo "Error: GraphQL schema files not found in ../schemas/"
          exit 1
        fi
        cp ../schemas/*.graphql ./lib/schemas/
        dart run build_runner build
      working-directory: junqo_front

    - name: Run Flutter tests
      run: flutter test
      working-directory: junqo_front

  mark-tests-passed-if-no-changes:
    needs: changes-check
    if: needs.changes-check.outputs.any_changed != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Mark tests as passed
        run: echo "No relevant changes detected - marking as passed."
