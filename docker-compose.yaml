# Project: Junqo
# Description: This file is the production docker-compose file for the Junqo project.
#              It deploy everything needed to run the project in production mode.

services:
  front:
    container_name: junqo_front
    build:
      context: ./
      dockerfile: ./junqo_front/dockerfile.prod
      args:
        - FLUTTER_VERSION=${FLUTTER_VERSION:-3.22.2}
    restart: always
    ports:
      - "80:80"
    depends_on:
      back:
        condition: service_healthy

  back:
    container_name: junqo_back
    build:
      context: ./
      dockerfile: ./junqo_back/dockerfile.prod
      args:
        - DATABASE_NAME=${DATABASE_NAME:-junqo}
        - DATABASE_USER=${DATABASE_USER:-junqo}
        - DATABASE_HOST=db
        - DATABASE_PORT=${DATABASE_PORT:-5432}
    env_file:
      - ${BACK_ENV_FILE:-./junqo_back/.env}
    restart: always
    networks:
      - back-net
    ports:
      - "${BACK_PORT:-4200}:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password

  db:
    container_name: junqo_db
    image: postgres:alpine
    restart: always
    shm_size: ${DATABASE_SHM_SIZE:-128mb}
    networks:
      - back-net
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-junqo}
      POSTGRES_USER: ${DATABASE_USER:-junqo}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-junqo}"]
      interval: 5s
      timeout: 5s
      retries: 5


networks:
  back-net:
    driver: bridge

volumes:
  db_data:

secrets:
  db_password:
    file: ${DATABASE_PASSWORD_FILE:-./db_password.conf}
